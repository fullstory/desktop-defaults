#!/bin/dash

###
# F.U.L.L.S.T.O.R.Y init script
#
# Copyright: (C) 2007-2008 F.U.L.L.S.T.O.R.Y Project
# Copyright: (C) 2007-2008 Kel Modderman <kel@otaku42.de>
# Copyright: (C) 2008 Stefan Lippers-Hollmann <s.l-h@gmx.de>
# License:   GPLv2
#
# F.U.L.L.S.T.O.R.Y Project Homepage:
# http://developer.berlios.de/projects/fullstory
###

# set default umask
umask 0022

# this is only invoked from fll-kde-desktop, inherit its environment
NAME="fll-kde-desktop"

###
# source distro-defaults, no-op unless in live mode
###
FLL_DISTRO_MODE="installed"

if [ -s /etc/default/distro ]; then
	. /etc/default/distro
fi

if [ "${FLL_DISTRO_MODE}" != "live" ]; then
	exit 0
fi

###
## functions
###
. /usr/share/desktop-defaults-common/fll-desktop-func

###
# read in variables from our default conffile
###
if [ -s "/etc/default/${NAME}" ]; then
	. "/etc/default/${NAME}"
fi

###
# read in variables from /etc/default/fll-locales
###
if [ -s /etc/default/fll-locales ]; then
	. /etc/default/fll-locales
fi

###
# cheatcode handling
###
for param in $(cat /proc/cmdline); do
	case "${param}" in
		flldebug=*)
			[ "${param#flldebug=}" = "${NAME}" ] && set -x
			;;
		nointro)
			NOINTRO="yes"
			;;
	esac
done

##########
# main() #
##########
cp_desktop_defaults_from /usr/share/desktop-defaults-kde

###
# force wallpaper, kdesktoprc is provided by our dot.kde
###
if [ "${FLL_WALLPAPER}" ] && [ -f "${HOME}/.kde/share/config/kdesktoprc" ]; then
	if grep -s -q '^Wallpaper=' "${HOME}/.kde/share/config/kdesktoprc"; then
		sed -i 's|^Wallpaper=.*|Wallpaper='"${FLL_WALLPAPER}"'|' \
			"${HOME}/.kde/share/config/kdesktoprc"
	fi
fi

###
# setup live user .kde/share/config
###
if [ ! -d "${HOME}/.kde/share/config" ]; then
	mkdir -p "${HOME}/.kde/share/config"
fi

###
# set Ksplash theme
###
if [ "${KDE_KSPLASH_THEME}" ]; then
	touch "${HOME}/.kde/share/config/ksplashrc"
	if grep -q '^Theme=' "${HOME}/.kde/share/config/ksplashrc"; then
		sed -i 's|^Theme=.*|Theme='"${KDE_KSPLASH_THEME}"'|' \
			"${HOME}/.kde/share/config/ksplashrc"
	else
		cat > "${HOME}/.kde/share/config/ksplashrc" \
<< EOF
[KSplash]
Theme=${KDE_KSPLASH_THEME}
EOF
	fi
fi

###
# setup keyboard chooser
###
if [ "${XKBLAYOUT}" ]; then
	touch "${HOME}/.kde/share/config/kxkbrc"
	if grep -q '^LayoutList=' "${HOME}/.kde/share/config/kxkbrc"; then
		sed -i 's|^LayoutList=.*|LayoutList='"${XKBLAYOUT}"'|' \
			"${HOME}/.kde/share/config/kxkbrc"
	else
		cat > "${HOME}/.kde/share/config/kxkbrc" \
<<EOF
[Layout]
LayoutList=${XKBLAYOUT}
Model=pc104
ShowFlag=true
SwitchMode=Global
Use=true
EOF
	fi
fi

###
# disable first time login wizard, set icon sizes
###
touch "${HOME}/.kde/share/config/kpersonalizerrc"
if grep -q '^FirstLogin=' "${HOME}/.kde/share/config/kpersonalizerrc"; then
	sed -i 's|^FirstLogin=.*|FirstLogin=false|' \
		"${HOME}/.kde/share/config/kpersonalizerrc"
else
	cat > "${HOME}/.kde/share/config/kpersonalizerrc" \
<<EOF
[General]
FirstLogin=false
EOF
fi

###
# konsole defaults
###
touch "${HOME}/.kde/share/config/konsolerc"
if grep -q '^RunOnStart=' "${HOME}/.kde/share/config/konsolerc"; then
	sed -i 's|^RunOnStart=.*|RunOnStart=false|' \
		"${HOME}/.kde/share/config/konsolerc"
else
	cat > "${HOME}/.kde/share/config/konsolerc" \
<<EOF
[TipOfDay]
RunOnStart=false
EOF
fi

###
# root konsole's
###
if [ ! -d "${HOME}/.kde/share/apps/konsole" ]; then
	mkdir -p "${HOME}/.kde/share/apps/konsole"
fi

if [ -f /usr/share/apps/konsole/sumc.desktop ]; then
	sed -e 's|^Exec=su.*$|Exec=sudo mc -c|' /usr/share/apps/konsole/sumc.desktop > \
		"${HOME}/.kde/share/apps/konsole/sumc.desktop"
fi

if [ -f /usr/share/apps/konsole/su.desktop ]; then
	sed -e 's|^Exec=su.*$|Exec=sudo -i|' /usr/share/apps/konsole/su.desktop > \
		"${HOME}/.kde/share/apps/konsole/su.desktop"
fi

# while here, fix #381659 until patch is applied
if [ -f /usr/share/apps/konsole/python.desktop ] && [ -e /usr/share/pixmaps/python.xpm ]; then
	sed -e 's|^Icon=.*|Icon=/usr/share/pixmaps/python.xpm|' /usr/share/apps/konsole/python.desktop > \
		"${HOME}/.kde/share/apps/konsole/python.desktop"
fi

###
# keep these disabled by default for clean desktop startup
###
for krc in kbluetoothdrc klipperrc; do
	touch "${HOME}/.kde/share/config/${krc}"
	if grep -q '^AutoStart=' "${HOME}/.kde/share/config/${krc}"; then
		sed -i 's|^AutoStart=.*|AutoStart=false|' \
			"${HOME}/.kde/share/config/${krc}"
	else
		cat > "${HOME}/.kde/share/config/${krc}" \
<<EOF
[General]
AutoStart=false
EOF
	fi
done

###
# korganizer
###
touch "${HOME}/.kde/share/config/korgacrc"
if grep -q '^Autostart' "${HOME}/.kde/share/config/korgacrc"; then
	sed -i 's|^Autostart=.*|Autostart=false|' \
		"${HOME}/.kde/share/config/korgacrc"
else
	cat > "${HOME}/.kde/share/config/korgacrc" \
<<EOF
[General]
Autostart=false
EOF
fi

###
# kpowersave is the odd one out, stop it from starting by default, avoid first time wizard
###
if [ -x /usr/bin/kpowersave ]; then
	touch "${HOME}/.kde/share/config/kpowersaverc"
	if grep -q '^Autostart' "${HOME}/.kde/share/config/kpowersaverc"; then
		sed -i 's|^Autostart=.*|Autostart=false|' \
			"${HOME}/.kde/share/config/kpowersaverc"
	else
		cat > "${HOME}/.kde/share/config/kpowersaverc" \
<<EOF
[General]
Autostart=false
AlreadyStarted=true
lockOnLidClose=false
lockOnSuspend=false
EOF
	fi

	###
	# disable kcmlaptop when kpowersave is installed
	###
	cat > "${HOME}/.kde/share/config/kcmlaptoprc" \
<<EOF
[BatteryDefault]
Enable=false
EOF
fi

###
# disable ktip
###
touch "${HOME}/.kde/share/config/ktiprc"
if grep -q '^RunOnStart=' "${HOME}/.kde/share/config/ktiprc"; then
	sed -i 's|^RunOnStart=.*|RunOnStart=false|' \
		"${HOME}/.kde/share/config/ktiprc"
else
	cat > "${HOME}/.kde/share/config/ktiprc" \
<<EOF
[TipOfDay]
RunOnStart=false
EOF
	fi
	
	###
	# disable arts
	###
	if [ ! -f "${HOME}/.kde/share/config/kcmartsrc" ]; then
		cat > "${HOME}/.kde/share/config/kcmartsrc" \
<<EOF
[Arts]
StartServer=false
EOF
fi

###
# create ~/Desktop if not present
###
if [ ! -d "${HOME}/Desktop" ]; then
	mkdir -p "${HOME}/Desktop"
fi

###
# kio shortcuts: media:/ , trash:/
###
for icon in media.desktop trash.desktop; do
	if [ ! -f "${HOME}/Desktop/${icon}" ] && [ -f "/usr/share/apps/systemview/${icon}" ]; then
		cp "/usr/share/apps/systemview/${icon}" "${HOME}/Desktop/${icon}"
	fi
done

###
# scan for index.html in fll specific live mountpoint directories
###
for mntpnt in /fll/*; do
	if [ -d "${mntpnt}" ] && [ -f "${mntpnt}/index.html" ]; then
		INDEXFILE="${mntpnt}/index.html"
		for ext in svg png gif ico; do
			if [ -f "${mntpnt}/${FLL_CDROM_INDEX_ICON}.${ext}" ]; then
				INDEXICON="${mntpnt}/${FLL_CDROM_INDEX_ICON}.${ext}"
				break
			fi
		done
		break
	fi
done

###
# create desktop shortcut to index.html
###
if [ -f "${INDEXFILE}" ]; then
	cat > "${HOME}/Desktop/${FLL_DISTRO_NAME}.desktop" \
<<EOF
[Desktop Entry]
Encoding=UTF-8
Type=Application
Exec=konqueror --geometry 950x700+35+20 file:${INDEXFILE}
Icon=${INDEXICON}
Terminal=0

Name=${FLL_CDROM_INDEX}
GenericName=${FLL_CDROM_INDEX}
EOF

	if [ "${NOINTRO}" != "yes" ]; then
		if [ ! -d "${HOME}/.kde/Autostart" ]; then
			mkdir -p "${HOME}/.kde/Autostart"
		fi

		ln -sf "${HOME}/Desktop/${FLL_DISTRO_NAME}.desktop" \
			"${HOME}/.kde/Autostart/"
	fi
elif [ -e "${HOME}/.kde/Autostart/${FLL_DISTRO_NAME}.desktop" ]; then
	# toram + persistency
	rm -f "${HOME}/.kde/Autostart/${FLL_DISTRO_NAME}.desktop"
fi

###
# allow gtk2 apps to blend in with kde style
###
if [ ! -f "${HOME}/.gtkrc-2.0" ]; then
	if [ "${GTK2_ENGINE}" ] && [ -f "/usr/share/themes/${GTK2_ENGINE}/gtk-2.0/gtkrc" ]; then
		echo "include \"/usr/share/themes/${GTK2_ENGINE}/gtk-2.0/gtkrc\"" > \
			"${HOME}/.gtkrc-2.0"
	fi
fi
