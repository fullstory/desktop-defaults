#!/bin/dash

### BEGIN INIT INFO
# Provides:          fll-gnome-desktop
# Required-Start:    fll-adduser fll-xdm
# Required-Stop:     
# Default-Start:     S
# Default-Stop:      
# Short-Description: prepare live user for gnome desktop
# Description:       The purpose of this script is to preseed the live users
#                    settings for the gnome desktop.
### END INIT INFO

###
# F.U.L.L.S.T.O.R.Y init script
#
# Copyright: (C) 2007 F.U.L.L.S.T.O.R.Y Project
# Copyright: (C) 2007 Kel Modderman <kel@otaku42.de>
# License:   GPLv2
#
# F.U.L.L.S.T.O.R.Y Project Homepage:
# http://developer.berlios.de/projects/fullstory
###

PATH=/sbin:/usr/sbin:/bin:/usr/bin
NAME="fll-gnome-desktop"

if [ ! -x /usr/bin/metacity ]; then
	exit 0
fi

###
# source distro-defaults, no-op unless in live mode
###
FLL_DISTRO_MODE="installed"

if [ -s /etc/default/distro ]; then
	. /etc/default/distro
fi

if [ "${FLL_DISTRO_MODE}" != "live" ]; then
	exit 0
fi

###
# source lsb functions
###
. /lib/lsb/init-functions

###
# ANSI escape sequences (N, R, G, Y, B, M, C, W)
###
. /lib/fll/fll-init-cols

###
# read in variables from our default conffile
###
if [ -s "/etc/default/${NAME}" ]; then
	. "/etc/default/${NAME}"
fi

###
# read in variables from /etc/default/fll-locales
###
if [ -s /etc/default/fll-locales ]; then
	. /etc/default/fll-locales
fi

###
# cheatcode handling
###
for param in $(cat /proc/cmdline); do
	case "${param}" in
		flldebug=*)
			[ "${param#flldebug=}" = "${NAME}" ] && set -x
			;;
		nointro)
			NOINTRO="yes"
			;;
	esac
done

FLL_LIVE_USER_HOME=$(getent passwd ${FLL_LIVE_USER} | cut -d\: -f 6)

if [ ! -d "${FLL_LIVE_USER_HOME}" ]; then
	log_daemon_msg "${B}${NAME}${N}" "${R}directory '${Y}${FLL_LIVE_USER_HOME}${R} does not exist${N}"
	log_end_msg 1
fi

###
# functions
###
. /lib/fll/fll-desktop-func

do_start() {
	cp_desktop_defaults_from /usr/share/desktop-defaults-gnome

	for mntpnt in /fll/*; do
		if [ -d "${mntpnt}" ] && [ -f "${mntpnt}/index.html" ]; then
			INDEXFILE="${mntpnt}/index.html"
			for ext in gif ico png; do
				if [ -f "${mntpnt}/${FLL_CDROM_INDEX_ICON}.${ext}" ]; then
					INDEXICON="${mntpnt}/${FLL_CDROM_INDEX_ICON}.${ext}"
					break
				fi
			done
			break
		fi
	done

	###
	# create desktop icon . . .
	###
	if [ ! -d "${FLL_LIVE_USER_HOME}/.config/autostart" ]; then
		install --directory --group="${FLL_LIVE_USER}" --owner="${FLL_LIVE_USER}" \
			"${FLL_LIVE_USER_HOME}/.config/autostart"
	fi
        
	if [ -f "${INDEXFILE}"  ] && [ "${NOINTRO}" != "yes" ] && \
		[ ! -f "${FLL_LIVE_USER_HOME}/.config/autostart/${FLL_DISTRO_NAME}.desktop" ]; then
		cat > "${FLL_LIVE_USER_HOME}/.config/autostart/${FLL_DISTRO_NAME}.desktop" \
<<EOF
[Desktop Entry]
Name=${FLL_DISTRO_NAME}-manual
Encoding=UTF-8
Version=1.0
Name[de_DE]=${FLL_DISTRO_NAME}-manual
Exec=epiphany file:${INDEXFILE}
X-GNOME-Autostart-enabled=true
EOF
		chown "${FLL_LIVE_USER}:${FLL_LIVE_USER}" \
			"${FLL_LIVE_USER_HOME}/.config/autostart/${FLL_DISTRO_NAME}.desktop"
	fi

	###
	# create ~/Desktop if not present
	###
	if [ ! -d "${FLL_LIVE_USER_HOME}/Desktop" ]; then
		install --directory --group="${FLL_LIVE_USER}" --owner="${FLL_LIVE_USER}" \
			"${FLL_LIVE_USER_HOME}/Desktop"
	fi

	if [ -f "${INDEXFILE}" ]; then
		cat > "${FLL_LIVE_USER_HOME}/Desktop/${FLL_DISTRO_NAME}.desktop" \
<<EOF
[Desktop Entry]
Name=${FLL_CDROM_INDEX}
Exec=epiphany file:${INDEXFILE}
Type=Application
Icon=${INDEXICON}
Terminal=0
EOF
	fi
	chown "${FLL_LIVE_USER}:${FLL_LIVE_USER}" \
		"${FLL_LIVE_USER_HOME}/Desktop/${FLL_DISTRO_NAME}.desktop"
	
	su ${FLL_LIVE_USER} -c 'gconftool-2 -t bool -s /apps/nautilus/preferences/always_use_browser true'
	su ${FLL_LIVE_USER} -c 'gconftool-2 -t string -s /desktop/gnome/background/picture_filename ${FLL_WALLPAPER}'
	su ${FLL_LIVE_USER} -c 'gconftool-2 -t string -s /desktop/gnome/background/picture_options stretched'
	su ${FLL_LIVE_USER} -c 'gconftool-2 -t bool -s /desktop/gnome/sound/enable_esd true'
	su ${FLL_LIVE_USER} -c 'gconftool-2 -t bool -s /desktop/gnome/sound/event_sounds true'
	su ${FLL_LIVE_USER} -c 'gconftool-2 -t string -s /apps/epiphany/general/homepage http://www.sidux.com'
	su ${FLL_LIVE_USER} -c 'gconftool-2 -t bool -s /apps/gnome-screensaver/lock_enabled false'
	su ${FLL_LIVE_USER} -c 'gconftool-2 -t int -s /apps/panel/toplevels/bottom_panel_screen0/background/opacity 3000'
	su ${FLL_LIVE_USER} -c 'gconftool-2 -t int -s /apps/panel/toplevels/top_panel_screen0/background/opacity 3000'
	su ${FLL_LIVE_USER} -c 'gconftool-2 -t string -s /apps/panel/toplevels/bottom_panel_screen0/background/opacity color'
	su ${FLL_LIVE_USER} -c 'gconftool-2 -t string -s /apps/panel/toplevels/top_panel_screen0/background/type color'
}

default_gdm_theme()
{
        umask 0022

        ###
        # setup GDM theme
        ###
        if [ "${GNOME_GDM_THEME}" ]; then
		if ! grep -q "^GraphicalTheme=" /etc/gdm/gdm.conf ; then
	                sed -i "s/\[greeter\]/\[greeter\]\nGraphicalTheme=${GNOME_GDM_THEME}\nGraphicalThemedColor=${GNOME_GDM_THEME_COLOR}/g" /etc/gdm/gdm.conf
		else
			sed -i "s/GraphicalTheme=.*/GraphicalTheme=${GNOME_GDM_THEME}/g" /etc/gdm/gdm.conf
	        fi
	fi
}

case "${1}" in
	start)
		log_daemon_msg "${B}${NAME}${N}"; log_action_begin_msg " ${G}preparing ${Y}${FLL_LIVE_USER}${G} for ${Y}gnome${N}"
		do_start
		default_gdm_theme
		log_end_msg 0
		;;
	stop)
		;;
	restart|force-reload)
		echo "Error: argument '${1}' not supported" >&2
		exit 3
		;;
	*)
		echo "Usage: ${NAME} {start|stop}" >&2
		exit 3
		;;
esac

:
