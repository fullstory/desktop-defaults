#!/bin/dash

### BEGIN INIT INFO
# Provides:          fll-kde-desktop
# Required-Start:    fll-adduser fll-xdm
# Required-Stop:     
# Default-Start:     S
# Default-Stop:      
# Short-Description: prepare live user for kde desktop
# Description:       The purpose of this script is to preseed the live users
#                    settings for the kde desktop.
### END INIT INFO

###
# F.U.L.L.S.T.O.R.Y init script
#
# Copyright: (C) 2007 F.U.L.L.S.T.O.R.Y Project
# License:   GPLv2
#
# F.U.L.L.S.T.O.R.Y Project Homepage:
# http://developer.berlios.de/projects/fullstory
###

PATH=/sbin:/usr/sbin:/bin:/usr/bin
NAME="fll-kde-desktop"

if [ ! -x /usr/bin/kwin ]; then
	exit 0
fi

###
# source distro-defaults, no-op unless in live mode
###
FLL_DISTRO_MODE="installed"

if [ -s /etc/default/distro ]; then
	. /etc/default/distro
fi

if [ "${FLL_DISTRO_MODE}" != "live" ]; then
	exit 0
fi

###
# source lsb functions
###
. /lib/lsb/init-functions

###
# ANSI escape sequences (N, R, G, Y, B, M, C, W)
###
. /lib/fll/fll-init-cols

###
# read in variables from our default conffile
###
if [ -s "/etc/default/${NAME}" ]; then
	. "/etc/default/${NAME}"
fi

###
# read in variables from /etc/default/fll-locales
###
if [ -s /etc/default/fll-locales ]; then
	. /etc/default/fll-locales
fi

###
# cheatcode handling
###
for param in $(cat /proc/cmdline); do
	case "${param}" in
		flldebug=*)
			[ "${param#flldebug=}" = "${NAME}" ] && set -x
			;;
		nointro)
			NOINTRO="yes"
			;;
	esac
done

FLL_LIVE_USER_HOME=$(getent passwd ${FLL_LIVE_USER} | cut -d\: -f 6)

if [ ! -d "${FLL_LIVE_USER_HOME}" ]; then
	log_daemon_msg "${B}${NAME}${N}" "${R}directory '${Y}${FLL_LIVE_USER_HOME}${R} does not exist${N}"
	log_end_msg 1
fi

###
# functions
###
. /lib/fll/fll-desktop-func

do_start() {
	cp_desktop_defaults_from /usr/share/desktop-defaults-kde

	###
	# force wallpaper, kdesktoprc is provided by our dot.kde
	###
	if [ "${FLL_WALLPAPER}" ] && [ -f "${FLL_LIVE_USER_HOME}/.kde/share/config/kdesktoprc" ]; then
		if grep -s -q '^Wallpaper=' "${FLL_LIVE_USER_HOME}/.kde/share/config/kdesktoprc"; then
			sed -i 's|^Wallpaper=.*|Wallpaper='"${FLL_WALLPAPER}"'|' \
				"${FLL_LIVE_USER_HOME}/.kde/share/config/kdesktoprc"
		fi
		chown "${FLL_LIVE_USER}:${FLL_LIVE_USER}" \
			"${FLL_LIVE_USER_HOME}/.kde/share/config/kdesktoprc"
	fi

	###
	# setup live user .kde/share/config
	###
	if [ ! -d "${FLL_LIVE_USER_HOME}/.kde/share/config" ]; then
		install --directory --group="${FLL_LIVE_USER}" --owner="${FLL_LIVE_USER}" \
			"${FLL_LIVE_USER_HOME}/.kde/share/config"
	fi

	###
	# set Ksplash theme
	###
	if [ "${KDE_KSPLASH_THEME}" ]; then
		touch "${FLL_LIVE_USER_HOME}/.kde/share/config/ksplashrc"
		if grep -q '^Theme=' "${FLL_LIVE_USER_HOME}/.kde/share/config/ksplashrc"; then
			sed -i 's|^Theme=.*|Theme='"${KDE_KSPLASH_THEME}"'|' \
				"${FLL_LIVE_USER_HOME}/.kde/share/config/ksplashrc"
		else
			cat > "${FLL_LIVE_USER_HOME}/.kde/share/config/ksplashrc" \
<< EOF
[KSplash]
Theme=${KDE_KSPLASH_THEME}
EOF
		fi
		chown "${FLL_LIVE_USER}:${FLL_LIVE_USER}" \
			"${FLL_LIVE_USER_HOME}/.kde/share/config/ksplashrc"
	fi

	###
	# setup keyboard chooser
	###
	if [ "${KDEKEYBOARDS}" ]; then
		touch "${FLL_LIVE_USER_HOME}/.kde/share/config/kxkbrc"
		if grep -q '^LayoutList=' "${FLL_LIVE_USER_HOME}/.kde/share/config/kxkbrc"; then
			sed -i 's|^LayoutList=.*|LayoutList='"${KDEKEYBOARDS}"'|' \
				"${FLL_LIVE_USER_HOME}/.kde/share/config/kxkbrc"
		else
			cat > "${FLL_LIVE_USER_HOME}/.kde/share/config/kxkbrc" \
<<EOF
[Layout]
LayoutList=${KDEKEYBOARDS}
Model=pc104
ShowFlag=true
SwitchMode=Global
Use=true
EOF
		fi
		chown "${FLL_LIVE_USER}:${FLL_LIVE_USER}" \
			"${FLL_LIVE_USER_HOME}/.kde/share/config/kxkbrc"
	fi

	###
	# disable first time login wizard, set icon sizes
	###
	touch "${FLL_LIVE_USER_HOME}/.kde/share/config/kpersonalizerrc"
	if grep -q '^FirstLogin=' "${FLL_LIVE_USER_HOME}/.kde/share/config/kpersonalizerrc"; then
		sed -i 's|^FirstLogin=.*|FirstLogin=false|' \
			"${FLL_LIVE_USER_HOME}/.kde/share/config/kpersonalizerrc"
	else
		cat > "${FLL_LIVE_USER_HOME}/.kde/share/config/kpersonalizerrc" \
<<EOF
[General]
FirstLogin=false
EOF
	fi
	chown "${FLL_LIVE_USER}:${FLL_LIVE_USER}" \
		"${FLL_LIVE_USER_HOME}/.kde/share/config/kpersonalizerrc"
	
	###
	# konsole defaults
	###
	touch "${FLL_LIVE_USER_HOME}/.kde/share/config/konsolerc"
	if grep -q '^RunOnStart=' "${FLL_LIVE_USER_HOME}/.kde/share/config/konsolerc"; then
		sed -i 's|^RunOnStart=.*|RunOnStart=false|' \
			"${FLL_LIVE_USER_HOME}/.kde/share/config/konsolerc"
	else
		cat > "${FLL_LIVE_USER_HOME}/.kde/share/config/konsolerc" \
<<EOF
[TipOfDay]
RunOnStart=false
EOF
	fi
	chown "${FLL_LIVE_USER}:${FLL_LIVE_USER}" \
		"${FLL_LIVE_USER_HOME}/.kde/share/config/konsolerc"
	
	###
	# root konsole's
	###
	if [ ! -d "${FLL_LIVE_USER_HOME}/.kde/share/apps/konsole" ]; then
		install --directory --group="${FLL_LIVE_USER}" --owner="${FLL_LIVE_USER}" \
			"${FLL_LIVE_USER_HOME}/.kde/share/apps/konsole"
	fi

	if [ -f /usr/share/apps/konsole/sumc.desktop ]; then
		sed -e 's|^Exec=su.*$|Exec=sudo mc -c|' /usr/share/apps/konsole/sumc.desktop > \
			"${FLL_LIVE_USER_HOME}/.kde/share/apps/konsole/sumc.desktop"
		chown "${FLL_LIVE_USER}:${FLL_LIVE_USER}" \
			"${FLL_LIVE_USER_HOME}/.kde/share/apps/konsole/sumc.desktop"
	fi

	if [ -f /usr/share/apps/konsole/su.desktop ]; then
		sed -e 's|^Exec=su.*$|Exec=sudo -i|' /usr/share/apps/konsole/su.desktop > \
			"${FLL_LIVE_USER_HOME}/.kde/share/apps/konsole/su.desktop"
		chown "${FLL_LIVE_USER}:${FLL_LIVE_USER}" \
			"${FLL_LIVE_USER_HOME}/.kde/share/apps/konsole/su.desktop"
	fi
	
	# while here, fix #381659 until patch is applied
	if [ -f /usr/share/apps/konsole/python.desktop ] && [ -e /usr/share/pixmaps/python.xpm ]; then
		sed -e 's|^Icon=.*|Icon=/usr/share/pixmaps/python.xpm|' /usr/share/apps/konsole/python.desktop > \
			"${FLL_LIVE_USER_HOME}/.kde/share/apps/konsole/python.desktop"
		chown "${FLL_LIVE_USER}:${FLL_LIVE_USER}" \
			"${FLL_LIVE_USER_HOME}/.kde/share/apps/konsole/python.desktop"
	fi

	###
	# keep these disabled by default for clean desktop startup
	###
	for krc in kbluetoothdrc klipperrc; do
		touch "${FLL_LIVE_USER_HOME}/.kde/share/config/${krc}"
		if grep -q '^AutoStart=' "${FLL_LIVE_USER_HOME}/.kde/share/config/${krc}"; then
			sed -i 's|^AutoStart=.*|AutoStart=false|' \
				"${FLL_LIVE_USER_HOME}/.kde/share/config/${krc}"
		else
			cat > "${FLL_LIVE_USER_HOME}/.kde/share/config/${krc}" \
<<EOF
[General]
AutoStart=false
EOF
		fi
		chown "${FLL_LIVE_USER}:${FLL_LIVE_USER}" \
			"${FLL_LIVE_USER_HOME}/.kde/share/config/${krc}"
	done

	###
	# korganizer
	###
	touch "${FLL_LIVE_USER_HOME}/.kde/share/config/korgacrc"
	if grep -q '^Autostart' "${FLL_LIVE_USER_HOME}/.kde/share/config/korgacrc"; then
		sed -i 's|^Autostart=.*|Autostart=false|' \
			"${FLL_LIVE_USER_HOME}/.kde/share/config/korgacrc"
	else
		cat > "${FLL_LIVE_USER_HOME}/.kde/share/config/korgacrc" \
<<EOF
[General]
Autostart=false
EOF
	fi
	chown "${FLL_LIVE_USER}:${FLL_LIVE_USER}" \
		"${FLL_LIVE_USER_HOME}/.kde/share/config/korgacrc"

	###
	# kpowersave is the odd one out, stop it from starting by default, avoid first time wizard
	###
	if [ -x /usr/bin/kpowersave ]; then
		touch "${FLL_LIVE_USER_HOME}/.kde/share/config/kpowersaverc"
		if grep -q '^Autostart' "${FLL_LIVE_USER_HOME}/.kde/share/config/kpowersaverc"; then
			sed -i 's|^Autostart=.*|Autostart=false|' \
				"${FLL_LIVE_USER_HOME}/.kde/share/config/kpowersaverc"
		else
			cat > "${FLL_LIVE_USER_HOME}/.kde/share/config/kpowersaverc" \
<<EOF
[General]
Autostart=false
AlreadyStarted=true
lockOnLidClose=false
lockOnSuspend=false
EOF
		fi
		chown "${FLL_LIVE_USER}:${FLL_LIVE_USER}" \
			"${FLL_LIVE_USER_HOME}/.kde/share/config/kpowersaverc"

		###
		# disable kcmlaptop when kpowersave is installed
		###
		cat > "${FLL_LIVE_USER_HOME}/.kde/share/config/kcmlaptoprc" \
<<EOF
[BatteryDefault]
Enable=false
EOF
		chown "${FLL_LIVE_USER}:${FLL_LIVE_USER}" \
			"${FLL_LIVE_USER_HOME}/.kde/share/config/kcmlaptoprc"
	fi

	###
	# disable ktip
	###
	touch "${FLL_LIVE_USER_HOME}/.kde/share/config/ktiprc"
	if grep -q '^RunOnStart=' "${FLL_LIVE_USER_HOME}/.kde/share/config/ktiprc"; then
		sed -i 's|^RunOnStart=.*|RunOnStart=false|' \
			"${FLL_LIVE_USER_HOME}/.kde/share/config/ktiprc"
	else
		cat > "${FLL_LIVE_USER_HOME}/.kde/share/config/ktiprc" \
<<EOF
[TipOfDay]
RunOnStart=false
EOF
	fi
	chown "${FLL_LIVE_USER}:${FLL_LIVE_USER}" \
		"${FLL_LIVE_USER_HOME}/.kde/share/config/ktiprc"
	
	###
	# disable arts
	###
	if [ ! -f "${FLL_LIVE_USER_HOME}/.kde/share/config/kcmartsrc" ]; then
		cat > "${FLL_LIVE_USER_HOME}/.kde/share/config/kcmartsrc" \
<<EOF
[Arts]
StartServer=false
EOF
		chown "${FLL_LIVE_USER}:${FLL_LIVE_USER}" \
			"${FLL_LIVE_USER_HOME}/.kde/share/config/kcmartsrc"
	fi

	###
	# create ~/Desktop if not present
	###
	if [ ! -d "${FLL_LIVE_USER_HOME}/Desktop" ]; then
		install --directory --group="${FLL_LIVE_USER}" --owner="${FLL_LIVE_USER}" \
			"${FLL_LIVE_USER_HOME}/Desktop"
	fi

	###
	# kio shortcuts: media:/ , trash:/
	###
	for icon in media.desktop trash.desktop; do
		if [ ! -f "${FLL_LIVE_USER_HOME}/Desktop/${icon}" ] && [ -f "/usr/share/apps/systemview/${icon}" ]; then
			install --group="${FLL_LIVE_USER}" --owner="${FLL_LIVE_USER}" \
				"/usr/share/apps/systemview/${icon}" "${FLL_LIVE_USER_HOME}/Desktop/${icon}"
		fi
	done

	###
	# scan for index.html in fll specific live mountpoint directories
	###
	for mntpnt in /fll/*; do
		if [ -d "${mntpnt}" ] && [ -f "${mntpnt}/index.html" ]; then
			INDEXFILE="${mntpnt}/index.html"
			for ext in gif ico png; do
				if [ -f "${mntpnt}/${FLL_CDROM_INDEX_ICON}.${ext}" ]; then
					INDEXICON="${mntpnt}/${FLL_CDROM_INDEX_ICON}.${ext}"
					break
				fi
			done
			break
		fi
	done

	###
	# create desktop shortcut to index.html
	###
	if [ -f "${INDEXFILE}" ]; then
		cat > "${FLL_LIVE_USER_HOME}/Desktop/${FLL_DISTRO_NAME}.desktop" \
<<EOF
[Desktop Entry]
Encoding=UTF-8
Type=Application
Exec=konqueror --geometry 950x700+35+20 file:${INDEXFILE}
Icon=${INDEXICON}
Terminal=0

Name=${FLL_CDROM_INDEX}
GenericName=${FLL_CDROM_INDEX}
EOF
		chown "${FLL_LIVE_USER}:${FLL_LIVE_USER}" \
			"${FLL_LIVE_USER_HOME}/Desktop/${FLL_DISTRO_NAME}.desktop"

		if [ "${NOINTRO}" != "yes" ]; then
			if [ ! -d "${FLL_LIVE_USER_HOME}/.kde/Autostart" ]; then
				install --directory --group="${FLL_LIVE_USER}" --owner="${FLL_LIVE_USER}" \
					"${FLL_LIVE_USER_HOME}/.kde/Autostart"
			fi

			ln -sf "${FLL_LIVE_USER_HOME}/Desktop/${FLL_DISTRO_NAME}.desktop" \
				"${FLL_LIVE_USER_HOME}/.kde/Autostart/"
		fi
	fi

	###
	# allow gtk2 apps to blend in with kde style
	###
	if [ ! -f "${FLL_LIVE_USER_HOME}/.gtkrc-2.0" ]; then
		if [ "${GTK2_ENGINE}" ] && [ -f "/usr/share/themes/${GTK2_ENGINE}/gtk-2.0/gtkrc" ]; then
			echo "include \"/usr/share/themes/${GTK2_ENGINE}/gtk-2.0/gtkrc\"" > \
				"${FLL_LIVE_USER_HOME}/.gtkrc-2.0"
			chown "${FLL_LIVE_USER}:${FLL_LIVE_USER}" "${FLL_LIVE_USER_HOME}/.gtkrc-2.0"
		fi
	fi
}

default_kdm_theme()
{
	umask 0022

	###
	# setup KDM theme
	###
	if [ "${KDE_KDM_THEME}" ]; then
		if [ -s /etc/default/kdm.d/kdmtheme ]; then
			sed -i 's|^THEME=.*|THEME='"${KDE_KDM_THEME}"'|' \
				/etc/default/kdm.d/kdmtheme
		else
			cat > /etc/default/kdm.d/kdmtheme \
<<EOF
USETHEME=true
THEME=${KDE_KDM_THEME}
EOF
		fi
	fi

	###
	# override fll-xdm if matching kdm walppaper is wanted
	###
	if [ "${KDE_KDM_WALLPAPER}" ]; then
		if [ -s /etc/default/kdm.d/wallpaper ]; then
			sed -i 's|^WALLPAPER=.*|WALLPAPER='"${KDE_KDM_WALLPAPER}"'|' \
				/etc/default/kdm.d/wallpaper
		else
			cat > /etc/default/kdm.d/wallpaper \
<<EOF
USEBACKGROUND=true
WALLPAPER=${KDE_KDM_WALLPAPER}
EOF
		fi
	fi
}

case "${1}" in
	start)
		log_daemon_msg "${B}${NAME}${N}"; log_action_begin_msg " ${G}preparing ${Y}${FLL_LIVE_USER}${G} for ${Y}kde${N}"
		do_start
		log_end_msg 0

		# set default kdm theme
		default_kdm_theme
		;;
	stop)
		;;
	restart|force-reload)
		echo "Error: argument '${1}' not supported" >&2
		exit 3
		;;
	*)
		echo "Usage: ${NAME} {start|stop}" >&2
		exit 3
		;;
esac

:
